package main

import (
	"bytes"
	"io"
	"net/http"
	"net/http/httptest"
	"testing"

	"github.com/gitavk/snippetbox/internal/assert"
)

func TestPingRoute(t *testing.T) {
	app := newTestApplication(t)

	ts := newTestServer(t, app.routers())
	defer ts.Close()

	res := ts.get(t, "/ping")
	assert.Equal(t, res.status, http.StatusOK)
	assert.Equal(t, res.body, "OK")

}

func TestPingHandler(t *testing.T) {
	// Initialize a new httptest.ResponseRecorder.
	rr := httptest.NewRecorder()
	// Initialize a new dummy http.Request.
	req, err := http.NewRequest(http.MethodGet, "/", nil)
	if err != nil {
		t.Fatal(err)
	}
	// Call the ping handler function, passing in the
	// httptest.ResponseRecorder and http.Request.
	ping(rr, req)
	// Call the Result() method on the http.ResponseRecorder to get the
	// http.Response generated by the ping handler.
	res := rr.Result()
	defer res.Body.Close()
	// Check that the status code written by the ping handler was 200.
	assert.Equal(t, res.StatusCode, http.StatusOK)
	// And we can check that the response body written by the ping handler
	// equals "OK".
	body, err := io.ReadAll(res.Body)
	if err != nil {
		t.Fatal(err)
	}
	body = bytes.TrimSpace(body)
	assert.Equal(t, string(body), "OK")
}
